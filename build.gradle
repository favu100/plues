plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'eclipse'
    id 'findbugs'
    id 'edu.sc.seis.launch4j' version '1.6.1'
    id "edu.sc.seis.macAppBundle" version "2.1.6"
}

sourceCompatibility = 8
targetCompatibility = 8

version = "2.0.0-SNAPSHOT"

mainClassName = "de.hhu.stups.plues.ui.Main"

applicationDefaultJvmArgs = ["-Dapple.awt.UIElement=true"]
def appName = "plues-" + project.version

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        name "snapshots"
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        name "releases"
        url "https://oss.sonatype.org/content/repositories/releases"
    }
}

dependencies {
    compile 'de.hhu.stups:de.prob2.kernel:2.0.1-SNAPSHOT'
    compile group: 'org.fxmisc.easybind', name: 'easybind', version: '1.0.3'
    compile 'org.controlsfx:controlsfx:8.40.11'
    compile 'com.google.code.findbugs:annotations:3.0.1'

    compile 'com.google.inject.extensions:guice-assistedinject:4.1.0'

    compile project(':model-generator')
    compile project(':musterstudienplaene')

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.mockito:mockito-core:1.+"
}

launch4j {
    mainClassName = project.mainClassName
    outfile = appName + ".exe"
    version = project.version
    textVersion = project.version
    messagesStartupError = "Startup Error"
    messagesBundledJreError = "Bundled JRE Error"
    messagesLauncherError = "Launch Error"
    messagesJreVersionError = "JRE Version Error"
}

task winZip(dependsOn: "launch4j", type: Zip) {
    def outdir = "${project.buildDir}/launch4j" // project.launch4j.outputDir not working as expected
    def libdir = "${project.buildDir}/launch4j/${project.launch4j.libraryDir}"
    def zipdir = "${project.buildDir}/launch4j"

    from(outdir) {
        include project.launch4j.outfile
        into ''
    }

    from(libdir) {
        include "*.jar"
        into 'lib'
    }

    archiveName appName + "-win.zip"
    destinationDir file(zipdir)
}

macAppBundle.appName = appName
macAppBundle.mainClassName = project.mainClassName
